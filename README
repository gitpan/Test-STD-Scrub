Title Page
     Software Version Description

     for

     Test::STD::Scrub - Utilites to wild card parts of a text file for comparisons

     Revision: -

     Version: 0.01

     Date: 2003/06/19

     Prepared for: General Public 

     Prepared by:  SoftwareDiamonds.com E<lt>support@SoftwareDiamonds.comE<gt>

     Copyright: copyright © 2003 Software Diamonds

     Classification: NONE

1.0 SCOPE
    This paragraph identifies and provides an overview of the released
    files.

  1.1 Indentification

    This release is a collection of Perl modules that extend the
    capabilities of the Perl language.

  1.2 System overview

    The system is the Perl programming language software. The system does
    not have any hardware. The Perl programming language contains two
    features that are utilized by this release:

    1   Program Modules to extend the languages

    2   Plain Old Documentation (POD) that may be embedded in the language

    These features are established by the referenced documents.

    When comparing text there are small snippets such as version numbers and
    dates that should be wild carded out and not influence the comparisions.
    The Test::STD:Scrub module replaces these small snippets with invariant
    snippet. By replacing the same part of each file with the same invariant
    snippet, those small sections of text are effectively wild carded for
    the comparisions.

    When performing tests, the ability to wild card small snippets of text
    is vital in making accurate comparison. The same capability is also
    essential for version control in comparing two pieces of software to see
    if there are significant changes.

    Thus, the scrub methods were initially developed in support of the 2167A
    modules "Test::STDmaker" (testing) and "ExtUtils::SVDmaker" (releasing
    versions) but may have uses in other modules.

    The dependency of the program modules in the US DOD STD2167A bundle is
    as follows:

     File::FileUtil 
       Test::STD::Scrub
         Test::Tech
            DataPort::FileType::FormDB DataPort::DataFile Test::STD::STDutil
                Test::STDmaker ExtUtils::SVDmaker

  1.3 Document overview.

    This document releases Test::STD-Scrub version 0.01 providing a
    description of the inventory, installation instructions and other
    information necessary to utilize and track this release.

3.0 VERSION DESCRIPTION
    All file specifications in this SVD use the Unix operating system file
    specification.

  3.1 Inventory of materials released.

  3.1.1 Files.

    This document releases the file found at the following repository:

       http://www.softwarediamonds/packages/Test-STD-Scrub-0.01
       http://www.perl.com/CPAN-local/authors/id/S/SO/SOFTDIA/Test-STD-Scrub-0.01

  3.1.2 Copyright.

    copyright © 2003 Software Diamonds

  3.1.3 Copyright holder contact.

     603 882-0846 E<lt>support@SoftwareDiamonds.comE<gt>

  3.1.4 License.

    Software Diamonds permits the redistribution and use in source and
    binary forms, with or without modification, provided that the following
    conditions are met:

    1   Redistributions of source code, modified or unmodified must retain
        the above copyright notice, this list of conditions and the
        following disclaimer.

    2   Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

    SOFTWARE DIAMONDS, http://www.SoftwareDiamonds.com, PROVIDES THIS
    SOFTWARE 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
    NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SOFTWARE
    DIAMONDS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
    SPECIAL,EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
    TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING USE
    OF THIS SOFTWARE, EVEN IF ADVISED OF NEGLIGENCE OR OTHERWISE) ARISING IN
    ANY WAY OUT OF THE POSSIBILITY OF SUCH DAMAGE.

  3.2 Inventory of software contents

    The content of the released, compressed, archieve file, consists of the
    following files:

     file                                                         version date       comment
     ------------------------------------------------------------ ------- ---------- ------------------------
     lib/Docs/Site_SVD/Test_STD_Scrub.pm                          0.01    2003/06/19 revised 0.04
     MANIFEST                                                     0.01    2003/06/19 generated, replaces 0.04
     Makefile.PL                                                  0.01    2003/06/19 generated, replaces 0.04
     README                                                       0.01    2003/06/19 generated, replaces 0.04
     lib/Test/STD/Scrub.pm                                        1.07    2003/06/19 revised 1.06
     t/Test/STD/Scrub.t                                           0.04    2003/06/19 revised 0.03

  3.3 Changes

    The changes to the previous version are as follows:

    Rename Module
        At 02:44 AM 6/14/2003 +0200, Max Maischein wrote: A second thing
        that I would like you to reconsider is the naming of
        "Test::TestUtil" respectively "Test::Tech" - neither of those is
        descriptive of what the routines actually do or what the module
        implements. I would recommend renaming them to something closer to
        your other modules, maybe "Test::SVDMaker::Util" and
        "Test::SVDMaker::Tech", as some routines do not seem to be specific
        to the Test::-suite but rather general (format_array_table). Some
        parts (the "scrub" routines) might even better live in another
        module namespace, "Test::Util::ScrubData" or something like that.

        Broke away the "scrub" routines from Test::TestUtil created this
        module Test::STD::Scrub.

    new methods
        Added the scrub_data and scrub_probe methods

  3.4 Adaptation data.

    This installation requires that the installation site has the Perl
    programming language installed. Installation sites running Microsoft
    Operating systems require the installation of Unix utilities. An
    excellent, highly recommended Unix utilities for Microsoft operating
    systems is unxutils by Karl M. Syring. A copy is available at the
    following web sites:

     http://unxutils.sourceforge.net
     http://packages.SoftwareDiamnds.com

    There are no other additional requirements or tailoring needed of
    configurations files, adaptation data or other software needed for this
    installation particular to any installation site.

  3.5 Related documents.

    There are no related documents needed for the installation and test of
    this release.

  3.6 Installation instructions.

    To installed the release file, use the CPAN module in the Perl release
    or the INSTALL.PL script at the following web site:

     http://packages.SoftwareDiamonds.com

    Follow the instructions for the the chosen installation software.

    The distribution file is at the following respositories:

       http://www.softwarediamonds/packages/Test-STD-Scrub-0.01
       http://www.perl.com/CPAN-local/authors/id/S/SO/SOFTDIA/Test-STD-Scrub-0.01

  3.6.1 Installation support.

    If there are installation problems or questions with the installation
    contact

     603 882-0846 E<lt>support@SoftwareDiamonds.comE<gt>

  3.6.2 Installation Tests.

    Most Perl installation software will run the following test script(s) as
    part of the installation:

     t/Test/STD/Scrub.t

  3.7 Possible problems and known errors

    The Test::STD::TestUtil program module is the foundation program module
    for testing and must be rock solid to ensure the quality of the Units
    that it will be testing. Testing of this module should be proactive and
    not dumped upon the end-user.

    There is still much work needed to ensure the quality of this module as
    follows:

    *   State the functional requirements for each method including not only
        the GO paths but also what to expect for the NOGO paths

    *   All the tests are GO path tests. Should add NOGO tests.

    *   Add the requirements addressed as *# R: * comment to the tests

    *   Write a program to build a matrix to trace test step to the
        requirements and vice versa by parsing the *# R: * comments.
        Automatically insert the matrix in the Test::TestUtil POD.

    Note the File::FileUtil, Test::STD::STDutil Test::STD::Scrub program
    modules breaks up the Test::TestUtil program module and Test::TestUtil
    has disappeared.

4.0 NOTES
    The following are useful acronyms:

    .d  extension for a Perl demo script file

    .pm extension for a Perl Library Module

    .t  extension for a Perl test script file

    DID Data Item Description

    POD Plain Old Documentation

    STD Software Test Description

    SVD Software Version Description

2.0 SEE ALSO
    Modules with end-user functional interfaces relating to US DOD 2167A
    automation are as follows:

    Test::STDmaker
    ExtUtils::SVDmaker
    DataPort::FileType::FormDB
    DataPort::DataFile
    Test::Tech
    Test
    Data::Dumper
    Test::STD::Scrub
    Test::STD::STDutil
    File::FileUtil
    The design modules for Test::STDmaker have no other conceivable use then
    to support the Test::STDmaker functional interface. The Test::STDmaker
    design modules are as follows:

    Test::STD::Check
    Test::STD::FileGen
    Test::STD::STD2167
    Test::STD::STDgen
    Test::STDtype::Demo
    Test::STDtype::STD
    Test::STDtype::Verify
    Some US DOD 2167A Software Development Standard, DIDs and other related
    documents that complement the US DOD 2167A automation are as follows:

    US DOD Software Development Standard
    US DOD Specification Practices
    Computer Operation Manual (COM) DID
    Computer Programming Manual (CPM) DID)
    Computer Resources Integrated Support Document (CRISD) DID
    Computer System Operator's Manual (CSOM) DID
    Database Design Description (DBDD) DID
    Engineering Change Proposal (ECP) DID
    Firmware support Manual (FSM) DID
    Interface Design Document (IDD) DID
    Interface Requirements Specification (IRS) DID
    Operation Concept Description (OCD) DID
    Specification Change Notice (SCN) DID
    Software Design Specification (SDD) DID
    Software Development Plan (SDP) DID
    Software Input and Output Manual (SIOM) DID
    Software Installation Plan (SIP) DID
    Software Programmer's Manual (SPM) DID
    Software Product Specification (SPS) DID
    Software Requirements Specification (SRS) DID
    System or Segment Design Document (SSDD) DID
    System or Subsystem Specification (SSS) DID
    Software Test Description (STD) DID
    Software Test Plan (STP) DID
    Software Test Report (STR) DID
    Software Transition Plan (STrP) DID
    Software User Manual (SUM) DID
    Software Version Description (SVD) DID
    Version Description Document (VDD) DID
